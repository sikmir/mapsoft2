#!/bin/sh -eu

# Make tiles
#
# Arguments: names with or without paths.
# No arguments: process all new vmap files
# Version for mapsoft2, 2024-11-07

##################################################

# read global configuration and functions
. vmaps.sh

# read local configuration
. ./vmaps.conf

##################################################

# Update colormap if needed
if [ ! -f "$CMAP" ]; then
  echo "Colormap is missing. Updating $CMAP"
  vmap_update_cmap $CMAP_SRC $CMAP
fi

##################################################
# If argument list is empty, find only old files
files=${@:-$(list_vmap_nt_tiles)}

# check that git is clean (print warnings, ignore result)
vmap_git_status_list $files ||:

##################################################
mkdir -p "$TILE_DIR"
for i in $files; do
  name=${i%.*}
  name=${name##*/}
  vmap="$VMAP_DIR/$name.$VMAP_EXT"
  if [ ! -f "$vmap" ]; then
    echo "can't find file: $vmap"
    continue
  fi

  # Loop through all regions (brd/<name>.gpx)
  for brd in $BRD_DIR/*.gpx; do
    brd_name=$(basename $brd .gpx)

    $($MS2NOM --ext --name "$name" --cover "$brd") || continue

    # update tiles
    echo "Rendering tiles: $name"
    $MS2RENDER $vmap\
      --config "$REND_CFG" -t "$TYPEINFO" --define "$(vmap_defs "$name" clip)"\
      --tmap --add --out "$TILE_DIR/{x}-{y}-{z}.png"\
      --zmin $(($TILE_MAXE+1)) --zmax $TILE_MAXZ\
      --bgcolor 0 --png_format pal --cmap_load $CMAP\
      --border_file $brd\
      --tmap_scale 1 --fit_patt_size;\

    $MS2RENDER $vmap\
      --config "$REND_CFG" -t "$TYPEINFO" --define "$(vmap_defs "$name" clip)"\
      --tmap --add --out "$TILE_DIR/{x}-{y}-{z}.png"\
      --zmin 0 --zmax $TILE_MAXE\
      --bgcolor 0 --png_format pal --cmap_load $CMAP\
      --border_file $brd\
      --tmap_scale 1 --vmap_minsc 1;\
  done
  touch "$TILE_DIR/$name.tstamp"
done

