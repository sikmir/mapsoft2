#!/bin/sh -eu

# Make files in OUT and TILES dir:
# - tiles (with vmaps_tiles script)
# - PNG and MAP (with vmaps_png script)
# - HTM and JPG (with vmaps_htm script) -- to be removed?
# - MP.ZIP and IMG (with vmaps_png script)
# - tile list (if needed)
# - mbtiles database (with vmaps_mbtiles script, if needed)
# - sqlitedb database (with vmaps_sqlitedb script, if needed)
# - index htm+jpg for each region  -- to be removed?
# - img for each region
#
# Arguments: names with or without paths.
# No arguments: process all vmap files
# Version for mapsoft2, 2024-11-07

##################################################

# read global configuration and functions
. vmaps.sh

# read local configuration
. ./vmaps.conf

##################################################

# Update colormap if needed
if [ ! -f "$CMAP" ]; then
  echo "Colormap is missing. Updating $CMAP"
  vmap_update_cmap $CMAP_SRC $CMAP
fi

vmaps_tiles $@
vmaps_png $@
vmaps_htm $@
vmaps_img $@

if ! check_nt_tiles $TLIST; then
  echo "Updating tile list"
  find $TILE_DIR/ -name '*.png' | xargs md5sum | sed "s| $TILE_DIR/| |" > $TLIST
fi

check_nt_tiles "$MBTILES"  || vmaps_mbtiles
check_nt_tiles "$SQLITEDB" || vmaps_sqlitedb

##############################################################
#index files

# generate typ
$CGPSM typ $TYPSRC TMP.TYP


for brd in $BRD2_DIR/*.gpx; do
  [ -f "$brd" ] || continue
  reg=$(basename $brd .gpx)
  echo "Updating region: $reg"

  htm=$OUT_DIR/all_$reg.htm
  jpg=$OUT_DIR/all_$reg.jpg
  img=$OUT_DIR/all_$reg.img

  # Build list of map files, update timestamps
  list=""
  imgs=""
  maps=""
  img_tstamp="$(mktemp -u tmp_XXXXXX.tstamp)"
  png_tstamp="$(mktemp -u tmp_XXXXXX.tstamp)"
  touch  $img_tstamp -d "1970-01-01"
  touch  $png_tstamp -d "1970-01-01"

  for i in $VMAP_DIR/*.$VMAP_EXT; do
    name=${i%.*}
    name=${name##*/}

    # Is the file touches the border?
    $MS2NOM --ext --name "$name" --cover "$brd" || continue
    list="$list $name"
    imgs="$imgs $OUT_DIR/$name.img"
    maps="$maps $OUT_DIR/$name.map"

    [ $img_tstamp -nt $OUT_DIR/$name.img ] ||
      touch $img_tstamp -r $OUT_DIR/$name.img

    [ $png_tstamp -nt $OUT_DIR/$name.png ] ||
      touch $png_tstamp -r $OUT_DIR/$name.png

  done
  echo "Map list: $list"


  # make img file
  if [ $img -ot $img_tstamp ]; then
    echo "Making $img"
    $GMT -j -v -m "slazav-$reg" -f 779,3 -o $img $imgs TMP.TYP
  fi

  # make jpg+htm file
  if [ $htm -ot $png_tstamp -o $jpg -ot $png_tstamp ]; then
    echo "Making $htm + $jpg"

    # Put all maps in a single json file, use jpeg instead of png
    # (to make conversion faster)
    tmp="$(mktemp -u tmp_XXXXXX.json)"
    $MS2CONV $maps --rescale_maps=$JPEG_SCALE -o "$tmp"
    sed -i -e 's/\.png/\.jpg/g' "$tmp"

    # Make thumbnail image + html map
    $MS2RENDER "$tmp" $EXTRA_TRACKS $BRD_DIR/*.gpx -o "$jpg"\
      --trk_draw_dots 0 --trk_draw_transp 0 --trk_draw_width 1\
      --map_draw_brd 0xFFFF0000 --map_max_sc 100\
      --htm "$htm" --mag $INDEX_SCALE;
    rm -f "$tmp"

    # Fix html map
    [ ! -f "$htm" ] || sed -e '
      /^<area/ {
        s/"\([^"]*\)\.jpg"/"\1.htm"/
      }
      s/src="/src="MAPDIR\//
      s|OUT/|MAPDIR/|g
      /<\/html>/d
      /<html>/d
    ' -i "$htm"

    # Add list of files to html map
    echo "<ul>" >> "$htm"
    for name in $list; do
      vmap="$VMAP_DIR/$name.$VMAP_EXT"
      [ -f "$vmap" ] || continue

      ## Use last commit in vmap to put timestamp
      d="$(git log -1 --pretty="format:%ci" "$vmap" | cut -d ' ' -f 1)"

      echo "<li><b>$name</b> (<font color=gray>$d</font>): "
      echo "  <a href=\"MAPDIR/$name.png\">[PNG]</a>"
      echo "  <a href=\"MAPDIR/$name.map\">[MAP]</a>"
      echo "  <a href=\"MAPDIR/$name.mp.zip\">[MP.ZIP]</a>"
      #echo "  <a href=\"MAPDIR/$name.img\">[IMG]</a>"
    done >> "$htm"
    echo "</ul>" >> "$htm"

    # Add link to img file
    echo "<p><a href=\"MAPDIR/all_$reg.img\">
      <span class=ru>Векторная карта всего района в формате IMG (для Garmin).</span>
      <span class=en>Vector map of the whole region in IMG format (for Garmin).</span>
      </a>" >> "$htm"
  fi
  rm -f $png_tstamp

done

rm -f $img_tstamp TMP.TYP
