<?xml version="1.0" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>ms2img</title>
<link rel="stylesheet" href="manpages.css" type="text/css" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<link rev="made" href="mailto:root@localhost" />
</head>

<body>



<ul id="index">
  <li><a href="#NAME">NAME</a></li>
  <li><a href="#SYNOPSIS">SYNOPSIS</a></li>
  <li><a href="#DESCRIPTION">DESCRIPTION</a></li>
  <li><a href="#GENERAL-OPTIONS">GENERAL OPTIONS</a>
    <ul>
      <li><a href="#Options-for-saving-images">Options for saving images</a></li>
    </ul>
  </li>
  <li><a href="#FILTER-ORDER">FILTER ORDER</a></li>
  <li><a href="#AUTHOR">AUTHOR</a></li>
  <li><a href="#SEE-ALSO">SEE ALSO</a></li>
</ul>

<h1 id="NAME">NAME</h1>

<p>ms2img -- mapsoft2 converter for raster images</p>

<h1 id="SYNOPSIS">SYNOPSIS</h1>

<pre><code>ms2img &lt;options&gt; &lt;input file&gt; &lt;output file&gt;</code></pre>

<h1 id="DESCRIPTION">DESCRIPTION</h1>

<p>ms2conv converts raster images (PNG, TIFF, GIF, JPG). Can be used to change image format, colormap or scale.</p>

<h1 id="GENERAL-OPTIONS">GENERAL OPTIONS</h1>

<dl>

<dt id="h---help"><b>-h, --help</b></dt>
<dd>

<p>Show help message.</p>

</dd>
<dt id="pod"><b>--pod</b></dt>
<dd>

<p>Show help message as POD template.</p>

</dd>
<dt id="v---verbose"><b>-v, --verbose</b></dt>
<dd>

<p>Be verbose.</p>

</dd>
</dl>

<h2 id="Options-for-saving-images">Options for saving images</h2>

<dl>

<dt id="img_out_fmt-arg"><b>--img_out_fmt &lt;arg&gt;</b></dt>
<dd>

<p>Explicitely set image format: jpeg, png, gif, tiff, pnm</p>

</dd>
<dt id="tiff_format-arg"><b>--tiff_format &lt;arg&gt;</b></dt>
<dd>

<p>When writing TIFF, convert image to one of following forms: argb, rgb, argb64, rgb64, grey, pal (default depends on the image).</p>

</dd>
<dt id="tiff_compression-arg"><b>--tiff_compression &lt;arg&gt;</b></dt>
<dd>

<p>Set compression algorythm for writing TIFF files: none, ccit_rle, ccit_rlew, ccit_fax3, ccit_fax4, lzw (default), jpeg, packbits</p>

</dd>
<dt id="tiff_minwhite-arg"><b>--tiff_minwhite &lt;arg&gt;</b></dt>
<dd>

<p>When writing greyscale TIFF, use MINISWHITE colors (default: 0).</p>

</dd>
<dt id="jpeg_quality-arg"><b>--jpeg_quality &lt;arg&gt;</b></dt>
<dd>

<p>Set JPEG quality for writing jpeg and tiff files (default 95).</p>

</dd>
<dt id="png_format-arg"><b>--png_format &lt;arg&gt;</b></dt>
<dd>

<p>When writing PNG, convert image to one of following forms: argb, rgb, grey, agrey, pal (default depends on the image).</p>

</dd>
<dt id="cmap_colors-arg"><b>--cmap_colors &lt;arg&gt;</b></dt>
<dd>

<p>Colormap size for reducing image colors (0..256, default 255, if 0 - use all colors). Image colors are reduced when saving to GIF, to PNG with --png_format=pal, to TIFF with --tiff_format=pal.</p>

</dd>
<dt id="cmap_alpha-arg"><b>--cmap_alpha &lt;arg&gt;</b></dt>
<dd>

<p>Alpha channel: none (default) -- remove it; full -- treat it equally with other channels; gif -- keep only fully-transparent color, if needed. When saving GIF file (which supports only fully transparent color) &quot;full&quot; works in the same way as &quot;gif&quot;.</p>

</dd>
<dt id="cmap_dim_method-arg"><b>--cmap_dim_method &lt;arg&gt;</b></dt>
<dd>

<p>Analog of pnmcolormap options -spreadbrightness and -spreadluminosity. When a box in the color space is measured, color dimensions can be treated equally or with luminosity factors. Values: norm (default) or lumin.</p>

</dd>
<dt id="cmap_rep_method-arg"><b>--cmap_rep_method &lt;arg&gt;</b></dt>
<dd>

<p>Analog of pnmcolormap options -center, -meancolor, and -meanpixel. When a box in the color space is chosen, it can be represented by its geometrical center, or by averaging pixels or colors in it. Values: center, meanpix (default), meancol.</p>

</dd>
<dt id="cmap_split_method-arg"><b>--cmap_split_method &lt;arg&gt;</b></dt>
<dd>

<p>Analog of pnmcolormap options -splitpix, -splitcol, -splitdim. How to choose a box in the color space for splitting: by its maximum dimension, maximum number of pixels or colors in it. Values: maxdim (default), maxpix, maxcol.</p>

</dd>
<dt id="cmap_save-arg"><b>--cmap_save &lt;arg&gt;</b></dt>
<dd>

<p>Save colormap to PNG file.</p>

</dd>
<dt id="cmap_load-arg"><b>--cmap_load &lt;arg&gt;</b></dt>
<dd>

<p>Load colormap from PNG file.</p>

</dd>
<dt id="cmap_add-arg"><b>--cmap_add &lt;arg&gt;</b></dt>
<dd>

<p>Add a color to colormap (useful to add transparent color to non-transparent colormap) TODO: allow multiple colors.</p>

</dd>
<dt id="scale-arg"><b>--scale &lt;arg&gt;</b></dt>
<dd>

<p>Downscaling factor, double value (default: 1.0)</p>

</dd>
<dt id="invert"><b>--invert</b></dt>
<dd>

<p>Invert image</p>

</dd>
<dt id="autolevel-arg"><b>--autolevel &lt;arg&gt;</b></dt>
<dd>

<p>Do auto color levels. Color components are transformed as f(x) = a-c/(a-x) in such a way that the darkest color becomes black, lightest one becomes white, average color becomes the value set by the option argument. Argument is one floating-point number (for all components) or three comma-separated numbers in the range 0..1, reasonable value is near 0.5. If --invert option is set then the transformation happens after the inversion. Color min/max/avr values are calculated in the central part determined by the --border option.</p>

</dd>
<dt id="autolevel_th-arg"><b>--autolevel_th &lt;arg&gt;</b></dt>
<dd>

<p>Skip some fraction on white/black colors in the autolevel calculation. Argument is one or two (for white and black) numbers in the range 0..1. Default is 0,0.</p>

</dd>
<dt id="ir_undust-arg"><b>--ir_undust &lt;arg&gt;</b></dt>
<dd>

<p>Remove dust using IR channel. Argument is a file with the IR channel</p>

</dd>
<dt id="ir_undust_sh-arg"><b>--ir_undust_sh &lt;arg&gt;</b></dt>
<dd>

<p>Shift of the IR channel, [x,y] in pixels.</p>

</dd>
<dt id="ir_undust_th-arg"><b>--ir_undust_th &lt;arg&gt;</b></dt>
<dd>

<p>Threshold for the IR channel, default 0.06.</p>

</dd>
<dt id="crop-arg"><b>--crop &lt;arg&gt;</b></dt>
<dd>

<p>Crop image to a rectangular area (intersection with the image coordinate range). Argument is json array with 4 numbers: [&lt;x&gt;,&lt;y&gt;,&lt;w&gt;,&lt;h&gt;]</p>

</dd>
<dt id="autocrop"><b>--autocrop</b></dt>
<dd>

<p>Crop image automatically, remove all &#39;bad&#39; lines from each side within region specified by --border.</p>

</dd>
<dt id="autocrop_ref-arg"><b>--autocrop_ref &lt;arg&gt;</b></dt>
<dd>

<p>Use another image for autocrop calculations.</p>

</dd>
<dt id="border-arg"><b>--border &lt;arg&gt;</b></dt>
<dd>

<p>Border for --autolevel and --autocrop calculations (pixels, default 50)</p>

</dd>
</dl>

<h1 id="FILTER-ORDER">FILTER ORDER</h1>

<p>filters are applied in the following order: invert, autolevel, crop, autocrop.</p>

<h1 id="AUTHOR">AUTHOR</h1>

<p>Vladislav Zavjalov &lt;slazav@altlinux.org&gt;</p>

<h1 id="SEE-ALSO">SEE ALSO</h1>

<ul>

<li><p><a href="http://slazav.github.io/mapsoft2">Mapsoft2 documentation (ru, en)</a></p>

</li>
<li><p><a href="http://github.com/slazav/mapsoft2">Mapsoft2 source code, bugtracker</a></p>

</li>
<li><p><a href="http://github.com/ushakov/mapsoft">Old Mapsoft project</a></p>

</li>
</ul>


</body>

</html>


